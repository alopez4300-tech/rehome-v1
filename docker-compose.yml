version: '3.8'

services:
  # PHP-FPM Application
  app:
    build:
      context: ./docker
      dockerfile: Dockerfile.php
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=rehome
      - DB_USERNAME=rehome
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAIL_HOST=mailpit
      - MAIL_PORT=1025
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - rehome

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - rehome

  # Queue Worker
  queue:
    build:
      context: ./docker
      dockerfile: Dockerfile.php
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=rehome
      - DB_USERNAME=rehome
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - rehome

  # Horizon Dashboard
  horizon:
    build:
      context: ./docker
      dockerfile: Dockerfile.php
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    command: php artisan horizon
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=rehome
      - DB_USERNAME=rehome
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - rehome

  # Frontend Vite Dev Server
  frontend:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "3000:3000"
      - "6006:6006"  # Storybook port
    networks:
      - rehome

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: rehome
      POSTGRES_USER: rehome
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rehome -d rehome"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rehome

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rehome

  # Mailpit for local email testing
  mailpit:
    image: axllent/mailpit
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      - rehome

  # MinIO S3-compatible storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: rehome
      MINIO_ROOT_PASSWORD: rehomesecret
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - rehome

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  rehome:
    driver: bridge